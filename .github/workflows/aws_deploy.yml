name: Deploy to Staging

on:
  push:
    branches:
      - 'main'      # triggers on main branch for releases
      - 'feature/*' # triggers on feature branches for staging
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy to staging'
        required: true
        type: string

jobs:
  deploy-to-staging:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set version
        id: set_version
        run: |
          if [[ "$GITHUB_REF" == "refs/heads/main" ]]; then
            # For main branch, use the latest tag or default to 1.0.0
            VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "1.0.0")
          else
            # For feature branches, use branch name and commit hash
            BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')
            COMMIT_HASH=$(git rev-parse --short HEAD)
            VERSION="${BRANCH_NAME}-${COMMIT_HASH}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

      - name: Build Docker image
        run: |
          docker build -t go-api .
          docker tag go-api:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/go-api:${{ env.VERSION }}
          docker tag go-api:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/go-api:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/go-api:${{ env.VERSION }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/go-api:latest

      - name: Update ECS Service
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          TASK_DEFINITION: GoApiInfraStackGoApiFargateServiceTaskDef1BE268E8
          CLUSTER: GoApiInfraStack-GoApiClusterD2A0AA60-xTXIdquI0A3P
          SERVICE: GoApiInfraStack-GoApiFargateService7D208A3F-eo57UwZsRmTg
          SECRET_ARN: arn:aws:secretsmanager:us-east-1:069597727371:secret:staging/go-api-3V2g50
        run: |
          chmod +x ./.github/scripts/update_ecs.sh
          ./.github/scripts/update_ecs.sh

      - name: Create Git tag for releases
        if: github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git tag -a "v${{ env.VERSION }}" -m "Release v${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

