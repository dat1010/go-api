name: Deploy to Environments

on:
  push:
    branches:
      - 'release_*'  # triggers on branches starting with "release_" for staging
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy to production (format: 1.0.0)'
        required: true
        type: string

jobs:
  deploy-to-staging:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Extract version from branch name
        id: extract_version
        run: |
          VERSION="${GITHUB_REF#refs/heads/release_}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

      - name: Build Docker image
        run: |
          docker build -t go-api .
          docker tag go-api:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/go-api:${{ env.VERSION }}
          docker tag go-api:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/go-api:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/go-api:${{ env.VERSION }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/go-api:latest

      - name: Update ECS Service
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          TASK_DEFINITION: GoApiInfraStackGoApiFargateServiceTaskDef1BE268E8
          CLUSTER: GoApiInfraStack-GoApiClusterD2A0AA60-lZ8voGHK2Stj
          SERVICE: GoApiInfraStack-GoApiFargateService7D208A3F-diJOgcTrPlCR
          SECRET_ARN: arn:aws:secretsmanager:us-east-1:069597727371:secret:staging/go-api-3V2g50
        run: |
          chmod +x ./.github/scripts/update_ecs.sh
          ./.github/scripts/update_ecs.sh

  deploy-to-production:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set version from input
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

      - name: Update ECS Service
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          TASK_DEFINITION: GoApiProdInfraStackGoApiProdFargateServiceTaskDef48554D7D
          CLUSTER: GoApiProdInfraStack-GoApiProdClusterEF8B48A5-5wfdJ3sUtyug
          SERVICE: GoApiProdInfraStack-GoApiProdFargateService66083257-2grSv3vpcGFB
          SECRET_ARN: arn:aws:secretsmanager:us-east-1:069597727371:secret:staging/go-api-3V2g50
        run: |
          chmod +x ./.github/scripts/update_ecs.sh
          ./.github/scripts/update_ecs.sh

